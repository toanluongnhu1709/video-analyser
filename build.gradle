plugins {
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.61'
    id 'com.github.ben-manes.versions' version '0.27.0'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'

group = 'com.boclips'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def junitVersion = "5.3.1"

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")

    implementation("com.github.boclips:event-bus:8.1.0")

    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("io.github.microutils:kotlin-logging:1.6.24")
    implementation("net.logstash.logback:logstash-logback-encoder:5.3")
    implementation('io.sentry:sentry-logback:5.2.4')
    implementation('io.sentry:sentry-spring-boot-starter:5.2.4')
    implementation("io.opentracing.contrib:opentracing-spring-jaeger-web-starter:2.0.3")

    testImplementation("com.nhaarman:mockito-kotlin:1.5.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation("com.github.tomakehurst:wiremock-jre8:2.22.0")
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

test {
    useJUnitPlatform()
}
